<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string># country property is used in gid computation of organisation\n
# transform it to category as soon as possible\n
billing_country = ""\n
delivery_country = ""\n
\n
if (parameter_dict[\'billing_country\']!=""):\n
  try:\n
    billing_country = context.getIntegrationSite().getCategoryFromMapping(\n
      category = \'Country/%s\' % parameter_dict[\'billing_country\'], create_mapping=True,\n
      create_mapping_line=True,\n
      ).split(\'/\', 1)[-1]\n
  except ValueError, msg:\n
    context.log("WebServiceRequest_buildUbercartSaleOrderBrain Getting category for %s raise with msg = %s" %(value, msg))\n
\n
\n
if (parameter_dict[\'delivery_country\']!=""):\n
  try:\n
    delivery_country = context.getIntegrationSite().getCategoryFromMapping(\n
      category = \'Country/%s\' % parameter_dict[\'delivery_country\'], create_mapping=True,\n
      create_mapping_line=True,\n
      ).split(\'/\', 1)[-1]\n
  except ValueError, msg:\n
    context.log("WebServiceRequest_buildUbercartSaleOrderBrain Getting category for %s raise with msg = %s" %(value, msg))\n
\n
so_dict = parameter_dict.copy()\n
so_dict[\'reference\'] = so_dict[\'id\']\n
billing_user = "%s %s" %(parameter_dict[\'billing_firstname\'], parameter_dict[\'billing_lastname\'])\n
billing_user_gid = " %s %s" %(billing_user, parameter_dict[\'primary_email\'])\n
\n
if parameter_dict.get("billing_company", None):\n
  so_dict[\'destination_administration\'] = " %s %s" %(parameter_dict[\'billing_company\'], billing_country)\n
  so_dict[\'destination_ownership\'] = " %s %s" %(parameter_dict[\'billing_company\'], billing_country)\n
  so_dict[\'destination_decision\'] = billing_user_gid\n
else:\n
  so_dict[\'destination_administration\'] = billing_user_gid\n
  so_dict[\'destination_ownership\'] = billing_user_gid\n
  so_dict[\'destination_decision\'] = billing_user_gid\n
\n
if parameter_dict.get("delivery_company", None):\n
  so_dict[\'destination\'] = " %s %s" %(parameter_dict[\'delivery_company\'], delivery_country)\n
else:\n
  delivery_user = "%s %s" %(parameter_dict[\'delivery_firstname\'], parameter_dict[\'delivery_lastname\'])\n
  if delivery_user != billing_user:\n
    so_dict[\'destination\'] = " %s %s" %(delivery_user, parameter_dict[\'primary_email\'])\n
\n
brain_list = [brain(context=context,\n
                    object_type=context.getDestinationObjectType(),\n
                    **so_dict),]\n
\n
return brain_list\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>parameter_dict, brain</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>WebServiceRequest_buildUbercartSaleOrderBrain</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
