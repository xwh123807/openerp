<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <global name="DTMLDocument" module="OFS.DTMLDocument"/>
        <tuple/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>RSSFeed_getAggregatedImportXSLT</string> </value>
        </item>
        <item>
            <key> <string>_vars</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
        <item>
            <key> <string>globals</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
        <item>
            <key> <string>raw</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<?xml version="1.0" encoding="utf-8"?>\n
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" \n
xmlns:md5="http://exslt.org/crypto" exclude-result-prefixes="md5"\n
xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"\n
xmlns:georss="http://www.georss.org/georss"\n
xmlns:atom="http://www.w3.org/2005/Atom"\n
xmlns:dc="http://purl.org/dc/elements/1.1/">\n
\n
<xsl:output method="xml" indent="yes" omit-xml-declaration="no"/>\n
\n
<!--Parameters list-->\n
<xsl:param name="categories_list" select="None"/>\n
<xsl:param name="subject_list" select="None"/>\n
<xsl:param name="actor" select="None"/>\n
<xsl:param name="portal_type" select="None"/>\n
\n
<!--Template matching the erp5 Tag-->\n
<xsl:template match="/">\n
  <erp5>\n
      <xsl:apply-templates/> \n
  </erp5>\n
</xsl:template>\n
\n
<xsl:template match="text()"/>\n
\n
<!--Template maching the item Tag-->\n
<xsl:template match="item|*[local-name() = \'entry\']">\n
       <xsl:variable name="md5_id">\n
        <xsl:choose>\n
          <xsl:when test="*[local-name() = \'title\']"><xsl:value-of select="*[local-name() = \'title\']"/></xsl:when>\n
          <xsl:when test="link"><xsl:value-of select="link|link/@href"/></xsl:when>\n
          <xsl:otherwise><xsl:value-of select="description|dc:description"/></xsl:otherwise>\n
        </xsl:choose>\n
      </xsl:variable>\n
      <xsl:variable name="converted_id" select="md5:md5($md5_id)"/>\n
        <object id="{$converted_id}">\n
          <portal_type type="string"><xsl:value-of select="$portal_type"/></portal_type>\n
          <categories_list type="tokens"><xsl:value-of select="$categories_list"/></categories_list>\n
          <title type="string"><xsl:value-of select="*[local-name() = \'title\']"/></title>\n
          <subject_list type="lines"><xsl:value-of select="$subject_list"/></subject_list>\n
          <description type="text"><xsl:value-of select="description|dc:description|*[local-name() = \'content\']"/><xsl:apply-templates select="summary"/></description>\n
          <url_text>\n
            <xsl:choose>\n
              <xsl:when test="link"><xsl:value-of select="link"/></xsl:when>\n
              <xsl:otherwise>None</xsl:otherwise>\n
            </xsl:choose>\n
          </url_text>\n
          <pub_date><xsl:value-of select="pubDate|dc:date|*[local-name() = \'published\']"/></pub_date>\n
          <workflow_action id="edit_workflow">\n
            <action type="string">edit</action>\n
            <actor type="string"><xsl:value-of select=\'$actor\'/></actor>\n
            <comment type="string"></comment>\n
            <error_message type="string"></error_message>\n
            <serial type="string">0.0.0.0</serial>\n
            <state type="string">current</state>\n
            <time type="date"><xsl:value-of select="pubDate|dc:date|*[local-name() = \'published\']"/></time>\n
          </workflow_action>\n
          <xsl:apply-templates select=".//geo:lat"/>\n
          <xsl:apply-templates select=".//geo:long"/>\n
        </object>\n
    </xsl:template>\n
    <xsl:template match="geo:lat">\n
      <latitude type="string"><xsl:value-of select="."/></latitude>\n
    </xsl:template>\n
    <xsl:template match="geo:long">\n
      <longitude type="string"><xsl:value-of select="."/></longitude>\n
    </xsl:template>    \n
    <xsl:template match="summary">\n
      <xsl:value-of select="."/>\n
    </xsl:template>\n
 \n
</xsl:stylesheet>\n


]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
